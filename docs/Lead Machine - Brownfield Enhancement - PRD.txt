# Brownfield Enhancement PRD

## Intro Project Analysis and Context

This PRD is for SIGNIFICANT enhancements to existing projects that require comprehensive planning and multiple stories.
Before proceeding:

1. **Assess Enhancement Complexity**: This is a major enhancement with a significant impact, which justifies the use of this full PRD process.
2. **Project Context**: The codebase is the single source of truth for the existing system. The documentation created by Lovable is noted as being potentially incomplete.
3. **Deep Assessment Requirement**: The recommendations made in this document are grounded in the analysis of the existing project, including its codebase and the provided `README.md` file.
4. **Continuous Validation**: All assumptions have been explicitly validated with the user.

**Existing Project Overview**

* **Analysis Source**: IDE-based fresh analysis and user-provided information.
* **Current Project State**: The project is a one-page web app that serves as the front end to a lead generation application. The backend integrations with Supabase and N8N are fully functional.

**Documentation Analysis**

* **Available Documentation**:
    * Tech Stack Documentation
    * Source Tree/Architecture
    * Coding Standards
    * API Documentation
    * External API Documentation
    * UX/UI Guidelines
    * Technical Debt Documentation
    * "Other: The codebase's README file."
* **Note**: Critical documentation is being created during this process.

**Enhancement Scope Definition**

* **Enhancement Type**: Major Feature Modification and UI/UX Overhaul.
* **Enhancement Description**: You want to refine the frontend UI, change the style to a new "Neumorphism" look, and improve the display of search results and real-time status updates.
* **Impact Assessment**: Significant Impact (substantial existing code changes).

**Goals and Background Context**

* **Goals**:
    * To refine the overall look and feel of the front-end UI to a "Neumorphism" style.
    * To improve the display of lead results in a well-formatted table that fits all the data on one screen.
    * To create a visually appealing, functional, and moving status bar that displays real-time updates from N8N via Supabase.
    * To make changes to the search query inputs.
* **Background Context**: The existing system is a one-page web app that serves as a frontend for a lead generation application. The backend integrations with Supabase and N8N are fully functional, and the webhook from the frontend is working correctly. The current issues are limited to the UI and the display of results and updates.

**Change Log**

| Change | Date | Version | Description | Author |
| :--- | :--- | :--- | :--- | :--- |
| Initial draft | [Current Date] | 1.0 | Initial PRD based on project analysis and user requirements. | John |

## Requirements

### Functional Requirements (FR)
1.  **FR1**: The user can input a search query and trigger the lead generation workflow.
2.  **FR2**: The UI displays real-time status updates received from N8N via Supabase during the workflow's progression.
3.  **FR3**: The UI displays the final list of leads in a well-formatted, responsive table.
4.  **FR4**: The lead results table contains all the data fields returned from the N8N scraper.
5.  **FR5**: The UI displays the search query inputs.

### Non-Functional Requirements (NFR)
1.  **NFR1**: The application's UI is styled in a new "Neumorphism" look and feel.
2.  **NFR2**: The UI is responsive and fits all content on one screen without requiring horizontal scrolling.
3.  **NFR3**: The status updates are displayed in a visually appealing and dynamic progress bar.
4.  **NFR4**: The UI is performant and does not lag or freeze when receiving real-time updates.

### Compatibility Requirements (CR)
1.  **CR1**: The new frontend UI must continue to send search queries to the N8N webhook without any breaking changes to the existing API contract.
2.  **CR2**: The UI must be compatible with the data schema provided by Supabase for both leads and status updates.
3.  **CR3**: The enhancement must maintain existing performance characteristics and not introduce new bottlenecks or latency.

## User Interface Enhancement Goals

For UI changes, we need to capture how they will integrate with existing UI patterns and design systems.

**Integration with Existing UI:**
* The new UI elements will fit with the existing design patterns and style guides.
* The application will maintain a one-page web app structure.

**Modified/New Screens and Views:**
* The primary modification will be the main dashboard view, which displays search inputs, a status bar, and lead results.

**UI Consistency Requirements:**
* The UI must be visually consistent with the new "Neumorphism" style.
* The UI must include a dark mode option.
* The lead results table must be responsive and display all data on one screen.
* The status bar must have a distinct visual style and functional behavior.

## Technical Constraints and Integration Requirements

This section documents technical constraints and integration requirements based on my analysis of your existing project and the provided `README.md` file.

**Existing Technology Stack:**
* **Frontend Framework**: React
* **Language**: TypeScript
* **Build Tool**: Vite
* **UI Library**: shadcn-ui
* **Styling**: Tailwind CSS
* **Backend Services**: Supabase, N8N

**Integration Approach:**
* **UI Integration**: New UI components will integrate with the existing React-based, single-page application structure.
* **API Integration**: The enhancement must not introduce any breaking changes to the existing webhook call to N8N.
* **Database Integration**: The new UI components must be compatible with the existing Supabase data schema for leads and status updates.

**Risk Assessment and Mitigation:**
* **Technical Risks**: The primary risk is breaking the existing data integration with Supabase and the webhook call to N8N during the UI refactoring.
* **Mitigation Strategies**: We will implement the changes incrementally, starting with isolated components, and we will rely on the existing, well-functioning backend services to avoid any disruption.

## Epic and Story Structure

**Epic Structure Decision**: I believe this enhancement should be structured as a single comprehensive epic that delivers the brownfield enhancement while maintaining existing functionality.

## Epic 1: Refactor Lead Machine UI

**Epic Goal**: To deliver a refined, Neumorphism-styled frontend UI that provides an excellent user experience, especially regarding the display of lead results and real-time status updates, without disrupting the existing backend integrations.

**Integration Requirements**: The new UI must be fully compatible with the existing Supabase data model for both leads and status updates. It must also continue to trigger the N8N workflow via the existing webhook without modification.

### Story 1.1: Setup and Theming

As a developer, I want to set up the new UI's foundation, so that all subsequent development can be built on the new style.

**Acceptance Criteria**
1.  **CR1**: The project is configured to use the `Neumorphism` style and supports both light and dark modes.
2.  **CR2**: Global styles and themes are defined in `Tailwind CSS`.

### Story 1.2: Implement Search Inputs

As a user, I want to enter search queries in a new UI, so that I can trigger the lead generation workflow.

**Acceptance Criteria**
1.  **FR1**: The UI contains a search input field and a search button.
2.  **FR5**: The search query inputs are styled according to the `Neumorphism` design.

### Story 1.3: Create and Animate Status Bar

As a user, I want to see the progress of the lead generation workflow, so that I know the system is working.

**Acceptance Criteria**
1.  **FR2**: The UI displays real-time status updates received from N8N via Supabase.
2.  **NFR3**: The status updates are displayed in a visually appealing and dynamic progress bar.
3.  **NFR4**: The UI remains performant and does not lag when receiving real-time updates.

### Story 1.4: Display Lead Results Table

As a user, I want to view the list of leads in a clear format, so that I can easily review the results.

**Acceptance Criteria**
1.  **FR3**: The UI displays the final list of leads in a well-formatted, responsive table.
2.  **FR4**: The table contains all the data fields returned from the N8N scraper.
3.  **NFR2**: The table fits all content on one screen without requiring horizontal scrolling.

## Checklist Results Report

All documents have been validated and are consistent.

## Next Steps

**PO Handoff:**
All artifacts have been validated and are ready for development. The documents have been sharded and are ready for handoff to the Story Manager.

**Developer Handoff:**
* **Next step**: Open the project in your IDE.
* **Engage the Story Manager**: Use the `sm` agent to create the first story from the sharded documents.
* **Begin implementation**: The developer agent will implement the stories sequentially.